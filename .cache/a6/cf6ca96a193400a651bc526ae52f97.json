{"id":"../../node_modules/core-js/internals/set-intersection.js","dependencies":[{"name":"D:\\STUDY\\NODE JS\\natours\\package.json","includedInParent":true,"mtime":1721971144576},{"name":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1721970435226},{"name":"../internals/a-set","loc":{"line":2,"column":19,"index":33},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\a-set.js"},{"name":"../internals/set-helpers","loc":{"line":3,"column":25,"index":81},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-helpers.js"},{"name":"../internals/set-size","loc":{"line":4,"column":19,"index":129},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-size.js"},{"name":"../internals/get-set-record","loc":{"line":5,"column":27,"index":182},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\get-set-record.js"},{"name":"../internals/set-iterate","loc":{"line":6,"column":25,"index":239},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-iterate.js"},{"name":"../internals/iterate-simple","loc":{"line":7,"column":28,"index":296},"parent":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\set-intersection.js","resolved":"D:\\STUDY\\NODE JS\\natours\\node_modules\\core-js\\internals\\iterate-simple.js"}],"generated":{"js":"'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/internals/set-intersection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../../node_modules/core-js/internals/set-intersection.js":"'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n\n  return result;\n};\n"},"lineCount":32}},"error":null,"hash":"f9effc99591e3013b3622029404ff55d","cacheData":{"env":{}}}